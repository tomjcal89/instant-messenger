{"version":3,"sources":["components/Navbar.js","components/Landing.js","components/Login.js","components/UserFunctions.js","components/Register.js","components/Profile.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","e","preventDefault","localStorage","removeItem","this","props","history","push","loginRegLink","react_default","a","createElement","className","Link","to","userLink","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","usertoken","Component","withRouter","Landing","Login","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","username","password","onChange","bind","assertThisInitialized","onSubmit","bing","setState","defineProperty","taget","name","value","_this2","user","axios","post","then","res","setItem","data","catch","err","console","log","login","noValidate","htmlFor","placeholder","Register","newUser","Profile","token","decoded","jwt_decode","App","BrowserRouter","components_Navbar","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yQAGMA,iLACKC,GACHA,EAAEC,iBACFC,aAAaC,WAAW,aACxBC,KAAKC,MAAMC,QAAQC,KAAK,sCAIxB,IAAMC,EACFC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,SAASF,UAAU,YAA5B,UAIHH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,YAAYF,UAAU,YAA/B,cAOFG,EACFN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,WAAWF,UAAU,YAA9B,SAIHH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cASnB,OACIH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uDACfH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAClBI,KAAK,SACLC,cAAY,WACZC,cAAY,UACZC,gBAAc,UACdC,gBAAc,QACdC,aAAW,qBACXZ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAGhBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qDAAqDU,GAAG,WACnEb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,YAAvB,UAKPV,aAAaqB,UAAYR,EAAWP,WA3DhCgB,aAkENC,cAAW1B,GCvDX2B,oLAVP,OACIjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,oBALEY,6CCiEPG,cA/DX,SAAAA,IAAe,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAzB,KAAAuB,IACXC,EAAAC,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAA7B,QACK8B,MAAQ,CACTC,SAAU,GACVC,SAAU,IAEdR,EAAKS,SAAWT,EAAKS,SAASC,KAAdT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAChBA,EAAKY,SAAWZ,EAAKY,SAASC,KAAdZ,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAPLA,wEASN5B,GACLI,KAAKsC,SAALb,OAAAc,EAAA,EAAAd,CAAA,GAAgB7B,EAAE4C,MAAMC,KAAO7C,EAAE4C,MAAME,yCAGlC9C,GAAE,IAAA+C,EAAA3C,KACPJ,EAAEC,iBCLW,SAAA+C,GACjB,OAAOC,IACNC,KAAK,cAAe,CACjBf,SAAUa,EAAKb,SACfC,SAAUY,EAAKZ,WAElBe,KAAK,SAAAC,GAEF,OADAlD,aAAamD,QAAQ,YAAaD,EAAIE,MAC/BF,EAAIE,OAEdC,MAAM,SAAAC,GACHC,QAAQC,IAAIF,KDCZG,CALa,CACTxB,SAAU/B,KAAK8B,MAAMC,SACrBC,SAAUhC,KAAK8B,MAAME,WAGbe,KAAK,SAAAC,GACVA,GACCL,EAAK1C,MAAMC,QAAQC,KAAK,+CAKhC,OACIE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,QAAMiD,YAAU,EAACpB,SAAUpC,KAAKoC,UAC5B/B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8BAAd,mBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOkD,QAAQ,YAAf,YACApD,EAAAC,EAAAC,cAAA,SAAOK,KAAK,WACZJ,UAAU,eACViC,KAAK,WACLiB,YAAY,iBACZhB,MAAO1C,KAAK8B,MAAMC,SAClBE,SAAUjC,KAAKiC,YAEnB5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOkD,QAAQ,YAAf,YACApD,EAAAC,EAAAC,cAAA,SAAOK,KAAK,WACZJ,UAAU,eACViC,KAAK,WACLiB,YAAY,iBACZhB,MAAO1C,KAAK8B,MAAME,SAClBC,SAAUjC,KAAKiC,YAEnB5B,EAAAC,EAAAC,cAAA,UAAQK,KAAK,SAASJ,UAAU,oCAAhC,sBArDRY,aE0ELuC,cAzEX,SAAAA,IAAe,IAAAnC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAzB,KAAA2D,IACXnC,EAAAC,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAAkC,GAAA9B,KAAA7B,QACK8B,MAAQ,CACTW,KAAM,GACNV,SAAU,GACVC,SAAU,IAEdR,EAAKS,SAAWT,EAAKS,SAASC,KAAdT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAChBA,EAAKY,SAAWZ,EAAKY,SAASC,KAAdZ,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KARLA,wEAUN5B,GACLI,KAAKsC,SAALb,OAAAc,EAAA,EAAAd,CAAA,GAAgB7B,EAAE4C,MAAMC,KAAO7C,EAAE4C,MAAME,yCAGlC9C,GAAE,IAAA+C,EAAA3C,KACPJ,EAAEC,iBAEF,IDnBgB+D,ECmBVhB,EAAO,CACTH,KAAMzC,KAAK8B,MAAMW,KACjBV,SAAU/B,KAAK8B,MAAMC,SACrBC,SAAUhC,KAAK8B,MAAME,WDtBT4B,ECyBPhB,EDxBNC,IAAMC,KAAK,gBAAiB,CAC/BL,KAAMmB,EAAQnB,KACdV,SAAU6B,EAAQ7B,SAClBC,SAAU4B,EAAQ5B,WAErBe,KAAK,SAAAC,GACFK,QAAQC,IAAK,iBCkBEP,KAAK,SAAAC,GACZL,EAAK1C,MAAMC,QAAQC,KAAK,+CAKhC,OACIE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,QAAMiD,YAAU,EAACpB,SAAUpC,KAAKoC,UAC5B/B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8BAAd,mBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOkD,QAAQ,QAAf,QACApD,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OACZJ,UAAU,eACViC,KAAK,OACLiB,YAAY,kBACZhB,MAAO1C,KAAK8B,MAAMW,KAClBR,SAAUjC,KAAKiC,YAEnB5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOkD,QAAQ,YAAf,YACApD,EAAAC,EAAAC,cAAA,SAAOK,KAAK,WACZJ,UAAU,eACViC,KAAK,WACLiB,YAAY,iBACZhB,MAAO1C,KAAK8B,MAAMC,SAClBE,SAAUjC,KAAKiC,YAEnB5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOkD,QAAQ,YAAf,YACApD,EAAAC,EAAAC,cAAA,SAAOK,KAAK,WACZJ,UAAU,eACViC,KAAK,WACLiB,YAAY,iBACZhB,MAAO1C,KAAK8B,MAAME,SAClBC,SAAUjC,KAAKiC,YAEnB5B,EAAAC,EAAAC,cAAA,UAAQK,KAAK,SAASJ,UAAU,oCAAhC,uBA/DLY,8BC0CRyC,cAzCX,SAAAA,IAAc,IAAArC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAzB,KAAA6D,IACVrC,EAAAC,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAAoC,GAAAhC,KAAA7B,QACK8B,MAAQ,CACTW,KAAM,GACNV,SAAU,IAJJP,mFASV,IAAMsC,EAAQhE,aAAaqB,UACrB4C,EAAUC,IAAWF,GAC3B9D,KAAKsC,SAAS,CACVG,KAAMsB,EAAQtB,KACdV,SAAUgC,EAAQhC,4CAItB,OACI1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,YAEJH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,UAAKP,KAAK8B,MAAMW,OAEpBpC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UAAKP,KAAK8B,MAAMC,sBAhC1BX,aCwBP6C,mLAhBX,OACC5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,KACE7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAC4D,EAAD,MACA9D,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWjD,IACjCjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAWZ,IACzCtD,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWhD,IACtClB,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAWV,cAVhCzC,aCGEoD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzE,EAAAC,EAAAC,cAACwE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrC,KAAK,SAAAsC,GACjCA,EAAaC","file":"static/js/main.9a852383.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport {Link, withRouter} from 'react-router-dom'\n\nclass Navbar extends Component {\n    logOut(e){\n        e.preventDefault()\n        localStorage.removeItem('usertoken')\n        this.props.history.push('/')\n    }\n\n    render() {\n        const loginRegLink = (\n            <ul className=\"navbar-nav\">\n             <li className=\"nav-item\">\n                <Link to=\"/login\" className=\"nav-link\">\n                    Login\n                </Link>\n             </li>\n             <li className=\"nav-item\">\n                <Link to=\"/register\" className=\"nav-link\">\n                    Register\n                </Link>\n             </li>\n            </ul>\n        )\n\n        const userLink = (\n            <ul className=\"navbar-nav\">\n             <li className=\"nav-item\">\n                <Link to=\"/profile\" className=\"nav-link\">\n                    User\n                </Link>\n             </li>\n             <li className=\"nav-item\">\n             \n                {/* <a href=\"\" onClick={this.logOut.bind(this)} className=\"nav-link\">\n                    Logout\n                </a> */}\n             </li>\n            </ul>\n        )\n\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark rounded\">\n            <button className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"navbar1\"\n            aria-controls=\"navbar1\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse justify-content-md-center\" id=\"navbar1\">\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/\" className=\"nav-link\">\n                            Home\n                        </Link>\n                    </li>    \n                </ul>\n                {localStorage.usertoken ? userLink : loginRegLink}\n            </div>\n            </nav>\n        )\n    }\n}\n\nexport default withRouter(Navbar)","import React, {Component} from 'react'\n\nclass Landing extends Component {\n    rentder () {\n        return (\n            <div className=\"container\">\n                <div className=\"jumbotron mt-5\">\n                    <div className=\"col-sm-8 mx-auto\">WELCOME</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Landing","import React, { Component } from 'react' \nimport { login } from './UserFunctions'\n\nclass Login extends Component {\n    constructor () {\n        super()\n        this.state = {\n            username: '',\n            password: '',\n        }\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bing(this)\n    }\n    onChange(e){\n        this.setState({[e.taget.name]: e.taget.value})\n    }\n\n    onSubmit(e){\n        e.preventDefault()\n\n        const user = {\n            username: this.state.username,\n            password: this.state.password\n        }\n\n        login(user).then(res => {\n            if(res) {\n                this.props.history.push('/profile')\n            }\n        })\n    }\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 mt-5 mxl-auto\">\n                        <form noValidate onSubmit={this.onSubmit}>\n                            <h1 className=\"h3 mb-3 font-weight-normal\"> Please sign in</h1>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"username\">Username</label>\n                                <input type=\"username\"\n                                className=\"form-control\"\n                                name=\"username\"\n                                placeholder=\"Enter Username\"\n                                value={this.state.username}\n                                onChange={this.onChange}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password</label>\n                                <input type=\"password\"\n                                className=\"form-control\"\n                                name=\"password\"\n                                placeholder=\"Enter Password\"\n                                value={this.state.password}\n                                onChange={this.onChange}/>\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-lg btn-primary btn-block\">\n                                 Sign In\n                            </button>\n                        </form>\n\n                    </div>\n                </div>          \n            </div>\n        )\n    }\n}\nexport default Login","import axios from 'axios'\n\nexport const register = newUser => {\n    return axios.post('user/register', {\n        name: newUser.name,\n        username: newUser.username,\n        password: newUser.password\n    })\n    .then(res => {\n        console.log ('Registerd!')\n    })\n}\n\nexport const login = user => {\n    return axios\n    .post('users/login', {\n        username: user.username,\n        password: user.password\n    })\n    .then(res => {\n        localStorage.setItem('usertoken', res.data)\n        return res.data\n    })\n    .catch(err => {\n        console.log(err)\n    })\n}\n\n","import React, { Component } from 'react' \nimport { register } from './UserFunctions'\n\nclass Register extends Component {\n    constructor () {\n        super()\n        this.state = {\n            name: '',\n            username: '',\n            password: '',\n        }\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bing(this)\n    }\n    onChange(e){\n        this.setState({[e.taget.name]: e.taget.value})\n    }\n\n    onSubmit(e){\n        e.preventDefault()\n\n        const user = {\n            name: this.state.name,\n            username: this.state.username,\n            password: this.state.password\n        }\n\n        register(user).then(res => {\n                this.props.history.push('/profile')\n        })\n    }\n\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 mt-5 mxl-auto\">\n                        <form noValidate onSubmit={this.onSubmit}>\n                            <h1 className=\"h3 mb-3 font-weight-normal\"> Please sign in</h1>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"name\">Name</label>\n                                <input type=\"text\"\n                                className=\"form-control\"\n                                name=\"name\"\n                                placeholder=\"Enter Full Name\"\n                                value={this.state.name}\n                                onChange={this.onChange}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"username\">Username</label>\n                                <input type=\"username\"\n                                className=\"form-control\"\n                                name=\"username\"\n                                placeholder=\"Enter Username\"\n                                value={this.state.username}\n                                onChange={this.onChange}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password</label>\n                                <input type=\"password\"\n                                className=\"form-control\"\n                                name=\"password\"\n                                placeholder=\"Enter Password\"\n                                value={this.state.password}\n                                onChange={this.onChange}/>\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-lg btn-primary btn-block\">\n                                 Register\n                            </button>\n                        </form>\n\n                    </div>\n                </div>          \n            </div>\n        )\n    }\n}\nexport default Register","import React, { Component } from 'react'\nimport jwt_decode from 'jwt-decode'\n\nclass Profile extends Component {\n    constructor() {\n        super()\n        this.state = {\n            name: '',\n            username: '',\n\n        }\n    }\n    componentDidMount() {\n        const token = localStorage.usertoken\n        const decoded = jwt_decode(token)\n        this.setState({\n            name: decoded.name,\n            username: decoded.username\n        })\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"jumbotron mt-5\">\n                    <div className=\"col-sm-8 mx-auto\">\n                        <h1 className=\"text-center\">Profile</h1>\n                    </div>\n                    <table className=\"table col-md-6 mx-auto\">\n                        <tbody>\n                            <tr>\n                                <td>Name</td>\n                                <td>{this.state.name}</td>\n                            </tr>\n                            <tr>\n                                <td>Username</td>\n                                <td>{this.state.username}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n} \n\nexport default Profile","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\nimport Navbar from './components/Navbar'\nimport Landing from './components/Landing'\nimport Login from './components/Login'\nimport Register from './components/Register'\nimport Profile from './components/Profile'\n\nclass App extends Component {\n  render() {\n    return (\n     <Router>\n       <div className=\"App\">\n        <Navbar/>\n        <Route exact path=\"/\" component={Landing} />\n        <div className=\"container\">\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/profile\" component={Profile} />\n        </div>\n       </div>\n     </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}